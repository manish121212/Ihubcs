/**
 * *****************************************************************************
 * Copyright (c) 2008-2015 LogiCoy, Inc. All rights reserved. This program and
 * the accompanying materials are made available under the terms of LogiCoy
 * License v1.0 which accompanies this distribution, and is available at
 * https://www.logicoy.com
 *
 * Contributors: LogiCoy, Inc. - initial API and implementation
 * ****************************************************************************
 */
/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/security/AccountDetailsServiceImpl-spring3.p.vm.java
 */
package com.logicoy.bpelmon.utils;

import java.io.UnsupportedEncodingException;
import java.util.Properties;
import java.util.logging.Logger;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 *
 * @author shashank
 */
@Service
public class Email {

	private static final Logger log = Logger.getLogger(Email.class.getName());
	@Autowired
	AppConstants appConstants;

	public boolean sendMail(String to, String subject, String content) {
		boolean status = false;
		final String SSL_FACTORY = "javax.net.ssl.SSLSocketFactory";

		// Get the session object
		Properties props = System.getProperties();
		props.setProperty("mail.smtp.host", appConstants.getEmailHost());
//		props.setProperty("mail.smtp.socketFactory.class", SSL_FACTORY);
//		props.setProperty("mail.smtp.socketFactory.fallback", "false");
		props.setProperty("mail.smtp.port", appConstants.getEmailPort());
//		props.setProperty("mail.smtp.socketFactory.port", "465");
		props.put("mail.smtp.auth", appConstants.getAuth());
		props.put("mail.smtp.starttls.enable", appConstants.getStartTls());
//		props.put("mail.debug", "true");
//		props.put("mail.store.protocol", "pop3");
//		props.put("mail.transport.protocol", "smtp");
		Session session = Session.getDefaultInstance(props, new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(appConstants.getEmailUsername(), appConstants.getEmailPassword());
			}
		});

		// compose the message
		try {
			MimeMessage message = new MimeMessage(session);
			try {
				message.setFrom(new InternetAddress(appConstants.getEmailUsername(), "iHubCS Team", "UTF-8"));
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
				log.severe(e.getMessage() + " Caused by: " + e.getCause());
				message.setFrom(new InternetAddress(appConstants.getEmailUsername()));
			}

			message.setRecipients(Message.RecipientType.TO, javax.mail.internet.InternetAddress.parse(to, false));

			// message.addRecipients(Message.RecipientType.TO, addresses);
			// message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
			message.setSubject(subject);
			message.setContent(content, "text/html");
			log.info("sending mail to " + to);
			// Send message
			Transport.send(message);

			log.info("mail sent successfully....");

			status = true;
		} catch (MessagingException mex) {
			mex.printStackTrace();
			log.warning(mex.getMessage() + " Caused by: " + mex.getCause());
		}
		return status;
	}
//	public static void main(String []args) {
//		System.out.println(sendMail("ihubcsexceptions@inspirage.com", "1hubcs@2017", "shrivatskashyap@gmail.com", "TEst", "Test"));
//	}
}
