/**
 * *****************************************************************************
 * Copyright (c) 2008-2015 LogiCoy, Inc. All rights reserved. This program and
 * the accompanying materials are made available under the terms of LogiCoy
 * License v1.0 which accompanies this distribution, and is available at
 * https://www.logicoy.com
 *
 * Contributors: LogiCoy, Inc. - initial API and implementation
 * ****************************************************************************
 */
/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/security/AccountDetailsServiceImpl-spring3.p.vm.java
 */
package com.logicoy.bpelmon.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author sharmila
 */
public class EnvPropertyReader {

	private static final Logger logger = Logger.getLogger(EnvPropertyReader.class.getName());

	private static Properties envProperties = null;

	private static long lastModified = 0L;
	private static String esbEnv = null;
	static {
		envProperties = loadProperties();
	}

	private static Properties loadProperties() {
		FileInputStream fis = null;
		try {
			esbEnv = System.getenv("ESB_ENV");
			if (esbEnv == null) {
				System.out.println("inside esbenv");
				String homeFolder = System.getenv("HOME");
				System.out.println("the home folder " + homeFolder);
				if (homeFolder != null && !homeFolder.equals("")) {
					esbEnv = homeFolder + "/inspirageConfig.properties";
					System.out.println("the ens " + esbEnv);
					logger.info("esbEnv: " + esbEnv);
				} else {
					esbEnv = "inspirageConfig.properties";
				}
			}

			File f = new File(esbEnv);
			Properties prop = new Properties();
			logger.info(f.getAbsolutePath());
			logger.info(f.getName());
			logger.info("Logging environment properties from " + esbEnv);
			fis = new FileInputStream(esbEnv);
			prop.load(fis);
			lastModified = f.lastModified();
			return prop;
		} catch (Exception ex) {
			Logger.getLogger(EnvPropertyReader.class.getName()).log(Level.SEVERE,
					"Exception while loading environment properties", ex);
			return null;
		} finally {
			if (fis != null) {
				try {
					fis.close();
				} catch (IOException ex) {
					Logger.getLogger(EnvPropertyReader.class.getName()).log(Level.SEVERE, null, ex);
				}
			}
		}
	}

//	public static String getValue(String key) {
//		File f = new File(esbEnv);
//		logger.log(Level.FINE, "File Last modified: {0} ; variable lastModified: {1}",
//				new Object[] { f.lastModified(), lastModified });
//		if (f.lastModified() > lastModified) {
//			envProperties = loadProperties();
//		}
//
//		return envProperties != null ? envProperties.getProperty(key) : "";
//
//	}

}
